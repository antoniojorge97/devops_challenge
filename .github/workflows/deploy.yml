name: Build and Push Docker Image

on:
  push:
    branches:
      - clean-main
      - develop
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-west-1
      AWS_ACCOUNT_ID: 967694737948
      ECR_REPOSITORY: devops-challenge-ecr
      DOTNET_PROJECT_PATH: src/custom-api/custom-api.csproj

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ${{ env.DOTNET_PROJECT_PATH }}

      - name: Build .NET API
        run: dotnet build ${{ env.DOTNET_PROJECT_PATH }} --configuration Release --no-restore

      - name: Run unit tests
        run: dotnet test --no-build || echo "No tests found â€” skipping..."

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build Docker image
        run: docker build --no-cache -t $ECR_REPOSITORY:latest -f images/Dockerfile .

      - name: Tag Docker image for ECR
        run: docker tag $ECR_REPOSITORY:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

      - name: Push Docker image to Amazon ECR
        run: docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest
