name: Push Docker Image to ECR

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      color:
        description: 'Which target group should receive traffic?'
        required: true
        default: 'blue'

jobs:
  push-to-ecr:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-west-1
      AWS_ACCOUNT_ID: 967694737948
      ECR_REPOSITORY: devops-challenge-ecr
      DOTNET_PROJECT_PATH: src/custom-api/custom-api.csproj


    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ${{ env.DOTNET_PROJECT_PATH }}

      - name: Build .NET API
        run: dotnet build ${{ env.DOTNET_PROJECT_PATH }} --configuration Release --no-restore

      #TODO: Improve custom-api and develop some unit tests
      - name: Run unit tests
        run: dotnet test --no-build || echo "No tests found â€” skipping..."

      # Configure AWS credentials (Grants access from Github to AWS)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      # Build Docker image (Build context is the root of the repository and points to the Dockerfile manually)
      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:latest -f images/Dockerfile . 

      - name: Tag Docker image
        run: |
          docker tag $ECR_REPOSITORY:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

      - name: Push Docker image to Amazon ECR
        run: |
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

      # Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: terraform init

      # Apply Terraform changes based on the selected target group
      - name: Terraform Plan
        run: |
          if [[ "${{ github.event.inputs.color }}" == "green" ]]; then
            terraform plan -var="active_target_group=${{ secrets.TG_GREEN_ARN }}"
          else
            terraform plan -var="active_target_group=${{ secrets.TG_BLUE_ARN }}"
          fi

      - name: Terraform Apply
        run: |
          if [[ "${{ github.event.inputs.color }}" == "green" ]]; then
            terraform apply -auto-approve -var="active_target_group=${{ secrets.TG_GREEN_ARN }}"
          else
            terraform apply -auto-approve -var="active_target_group=${{ secrets.TG_BLUE_ARN }}"
          fi